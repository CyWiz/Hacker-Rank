#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>

int getMinimumCost(int n, int k, int* c){
    // Complete this function
    long sum=0,temp,i,j;
    if(k>=n)
        for(int i=0;i<n;i++)
            sum+=c[i];
    else
        {           //bubble sort
                  for (i = 0; i < n; i++)
                    {
                    for (j = 0; j < (n - i - 1); j++)
                     {
                        if (c[j] > c[j + 1])
                            {
                                temp = c[j];
                                c[j] = c[j + 1];
                                c[j + 1] = temp;
                             }
                       }
                    }
        //cost sorted
        temp=0;
        while(n>0)
        {  
            for(i=n-1;i>=n-k && i>=0;i--)
                sum+=(temp+1)*c[i];
            if(i==-1)
                break;
            else
                n=n-k;
                temp+=1;
        }
        }
    return sum;
}

int main() {
    int n; 
    int k; 
    scanf("%d %d", &n, &k);
    int *c = malloc(sizeof(int) * n);
    for(int c_i = 0; c_i < n; c_i++){
       scanf("%d",&c[c_i]);
    }
    int minimumCost = getMinimumCost(n, k, c);
    printf("%d\n", minimumCost);
    return 0;
}
